// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rabbit.Identity.Infrastructure.EntityFrameworkCore;

#nullable disable

namespace Rabbit.Identity.Infrastructure.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20230304135738_init-identity")]
    partial class initidentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("identity_v1")
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.PermissionAggregate.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("_description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Description");

                    b.Property<string>("_name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<int?>("_parentId")
                        .HasColumnType("integer")
                        .HasColumnName("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("_name")
                        .IsUnique();

                    b.ToTable("Permissions", "identity_v1");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.RoleAggregate.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("_description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Description");

                    b.Property<bool>("_isActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IsActive");

                    b.Property<bool>("_isSystemRole")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSystemRole");

                    b.Property<string>("_name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("_name")
                        .IsUnique();

                    b.ToTable("Roles", "identity_v1");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.RoleAggregate.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("_permissionId")
                        .HasColumnType("integer")
                        .HasColumnName("PermissionId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("_permissionId", "RoleId")
                        .IsUnique();

                    b.ToTable("RolePermissions", "identity_v1");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.UserAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("_email")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Email");

                    b.Property<string>("_passwordHash")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("_phone")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("Phone");

                    b.Property<string>("_username")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("_username")
                        .IsUnique();

                    b.ToTable("Users", "identity_v1");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.UserAggregate.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("_roleId")
                        .HasColumnType("integer")
                        .HasColumnName("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "_roleId")
                        .IsUnique();

                    b.ToTable("UserRoles", "identity_v1");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.RoleAggregate.RolePermission", b =>
                {
                    b.HasOne("Rabbit.Identity.AggregateModels.RoleAggregate.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.UserAggregate.UserRole", b =>
                {
                    b.HasOne("Rabbit.Identity.AggregateModels.UserAggregate.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.RoleAggregate.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Rabbit.Identity.AggregateModels.UserAggregate.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
